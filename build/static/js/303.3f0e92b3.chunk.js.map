{"version":3,"file":"static/js/303.3f0e92b3.chunk.js","mappings":"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","sources":["component/Timer.tsx","component/MemoryGame.tsx","component/ResetBtn.tsx","component/Record.tsx","component/Content.tsx","App.tsx"],"sourcesContent":["//게임 타이머(게임 시작시 생성)\nimport React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { TimerProps } from '../model/gameType';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { setUserRecord } from '../redux/propsSlice';\n\nconst Time = styled.div`\n\tline-height:2.5rem;\n\tfont-size:2.5em;\n\tfont-weight:600;\n\tcolor:orange;\n`;\n\nconst Timer: React.FC<TimerProps> = () => {\n\tconst dispatch = useDispatch();\n\tconst run = useSelector((state: RootState) => state.props.run);\n\tconst [seconds, setSeconds] = useState<number>(0);\n  const [record, setRecord] = useState<string>(\"00:00\");\n\n\tconst formatTime = (time: number) => { //타이머 두자릿수(10보다 작으면 0 붙여주기)\n\t\treturn time < 10 ? \"0\" + time : time.toString();\n\t}\n\n\tuseEffect(() => { //게임 시작시 타이머 작동(run=true인 경우)\n\t\tlet timer: NodeJS.Timeout;\n\t\tif(run) { //타이머 시작\n\t\t\ttimer = setInterval(() => {\n\t\t\t\tsetSeconds((prevSeconds) => prevSeconds + 1);\n\t\t\t}, 1000);\n\n\t\t\tconst minutes = Math.floor(seconds / 60); //60초가 되면 1분으로 표시\n\t\t\tconst remainingSeconds = seconds % 60; //60초 이후 다시 0부터 초단위 시작(seconds % 60 = 누적시간에서 60을 나누고 남은 값)\n\t\t\tconst progress = formatTime(minutes) + \":\" + formatTime(remainingSeconds);\n\t\t\tsetRecord(progress);\n\t\t\tdispatch(setUserRecord(progress));\n\t\t} else if(!run) { //종료시 초기화\n\t\t\tsetSeconds(0);\n\t\t\tsetRecord(\"00:00\");\n\t\t}\n\n    return () => clearInterval(timer); // 컴포넌트가 언마운트될 때 타이머 정리\n  }, [seconds, run, dispatch]);\n\t\n\treturn (\n\t\t<Time>\n\t\t\t{record}\n\t\t\t{/* run(게임시작) 이 true일때 타이머 작동 */}\n\t\t</Time>\n\t)\n}\n\nexport default Timer","// 게임 영역(이모지 카드)\nimport React, {useState, useEffect} from 'react';\nimport { styled } from 'styled-components';\nimport { MemoryGameProps } from '../model/gameType';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { setRun, setFinish } from '../redux/propsSlice';\n\nconst Wrap = styled.div`\n\twidth:100%;\n\tmax-width:440px;\n\tmargin:10px auto 20px;\n\tpadding-top:100%;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tflex-wrap:wrap;\n\t\tgap:3.33%;\n\t\ttransform-style:preserve-3d;\n\t\tperspective:500px;\n\t\tposition:absolute;\n\t\tinset:0;\n\t}\n\n`;\nconst Card = styled.div`\n\twidth:22.5%;\n\tpadding-top:22.5%;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tjustify-content:center;\n\t\talign-items:center;\n\t\tfont-size:3em;\n\t\tbackground-color:#fff;\n\t\ttransition:0.25s;\n\t\ttransform:rotateY(180deg);\n\t\tcursor:pointer;\n\t\tposition:absolute;\n\t\tinset:0;\n\t\t&::after{\n\t\t\tcontent:\"\";\n\t\t\tposition:absolute;\n\t\t\tinset:0;\n\t\t\tbackground-color:#209d70;\n\t\t\ttransform:rotateY(0deg);\n\t\t\tbackface-visibility:hidden;\n\t\t}\n\t\t&.open{\n\t\t\ttransform:rotateY(0deg);\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t\t&.match{\n\t\t\tpointer-events:none;\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t}\n\t&:hover{\n\t\t>div{\n\t\t\t&::after{\n\t\t\t\tbackground-color:#59b18d;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst MemoryGame: React.FC<MemoryGameProps> = () => {\n\tconst dispatch = useDispatch();\n\tconst resetCount = useSelector((state: RootState) => state.props.resetCount);\n\tconst [randomEmojis, setRandomEmojis] = useState<string[]>([]);\n\tconst [open, setOpen] = useState<number[]>([]);\n\tconst [match, setMatch] = useState<number[]>([]);\n\tconst [start, setStart] = useState<boolean>(false);\n\t\n\tuseEffect(() => { //랜덤순으로 이모지 카드 만들기(리셋버튼 클릭시 재실행)\n\t\tconst emojis = [\"😁\", \"😁\", \"🤪\", \"🤪\", \"🥳\", \"🥳\", \"😭\", \"😭\", \"🤢\", \"🤢\", \"🥵\", \"🥵\", \"😱\", \"😱\", \"🥶\", \"🥶\"];\n    const shuffled = emojis.sort(() => (Math.random() > 0.5 ? 1 : -1));\n\t\tsetStart(false);\n\t\tsetOpen([]);\n\t\tsetMatch([]);\n    setRandomEmojis(shuffled);\n  }, [resetCount]);\n\n\tuseEffect(() => {\n\t\tif(open.length === 2) { //두장의 카드를 오픈한 경우\n\t\t\tconst [idx1, idx2] = open;\n\t\t\tconst emoji1 = randomEmojis[idx1];\n\t\t\tconst emoji2 = randomEmojis[idx2];\n\n\t\t\tif(emoji1 === emoji2) { //두 카드의 이모지가 동일한 경우\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetMatch([...match, idx1, idx2]);\n\t\t\t\t\tsetOpen([]);\n\t\t\t\t}, 500)\n\t\t\t} else{ //두 카드의 이모지가 다른 경우\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetOpen([]);\n\t\t\t\t}, 500)\n\t\t\t}\n\t\t}\n\n\t\tif(randomEmojis.length > 0 && match.length > 0 && randomEmojis.length === match.length) {\n\t\t\t//모든 카드의 이모지가 동일한 경우\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(start) {\n\t\t\t\t\tdispatch(setRun(false)); //시작 props\n\t\t\t\t\tdispatch(setFinish(true)); //종료 props\n\t\t\t\t\tsetStart(false);\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t}\n\t}, [open, randomEmojis, match, start, dispatch])\n\n\tconst select = (idx: number) => { //카드 오픈 이벤트\n\t\tif(open.length >= 2) return; //2개의 카드가 열려있으면 이벤트 무시\n\t\tif(open.includes(idx)) return; //이미 선택된 카드면 이벤트 무시\n\t\tif(!start) {\n\t\t\tdispatch(setRun(true));\n\t\t\tsetStart(true);\n\t\t}\n\n\t\tsetOpen([...open, idx]) //선택된 카드 배열에 추가\n\t}\n\n\treturn (\n\t\t<Wrap>\n\t\t\t<div>\n\t\t\t\t{randomEmojis.map((emoji, idx) => (\n\t\t\t\t\t<Card key={idx}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => select(idx)}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\topen.includes(idx)\n\t\t\t\t\t\t\t\t? \"open\"\n\t\t\t\t\t\t\t\t: match.includes(idx)\n\t\t\t\t\t\t\t\t? \"match\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emoji}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t))}\n\t\t\t</div>\n    </Wrap>\n\t)\n}\n\nexport default MemoryGame","//게임 리셋 버튼\nimport React from 'react';\nimport { styled } from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { resetGame } from '../redux/propsSlice';\n\nconst Btn = styled.button`\n\tpadding:15px 20px;\n\tfont-size:1.5em;\n\ttext-transform:uppercase;\n\tletter-spacing:0.1em;\n\tborder:0;\n\tcolor:#267c65;\n\tbackground-color:#fff;\n\tcursor:pointer;\n\t&:hover{\n\t\tcolor:#fff;\n\t\tbackground-color:#267c65;\n\t}\n`;\n\nconst ResetBtn: React.FC = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Btn onClick={() => { dispatch(resetGame()); }}>Reset Game</Btn>\n\t)\n}\n\nexport default ResetBtn","//기록 저장 모달팝업(게임 종료 시)\nimport React, { useEffect, useState } from 'react'\nimport { styled } from 'styled-components';\nimport { RecordProps } from '../model/gameType';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport { setRank, resetGame } from '../redux/propsSlice';\n\nconst Save = styled.div`\n\twidth:100%;\n\theight:100%;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tbackground-color:rgba(255,255,255,0.3);\n\tposition:fixed;\n\tinset:0;\n\tbackdrop-filter:blur(3px);\n\tanimation:saveBG 0.5s cubic-bezier(.49,-0.04,.09,.95);\n\t>div{\n\t\twidth:calc(100% - 60px);\n\t\tmax-width:550px;\n\t\tpadding:40px;\n\t\tborder-radius:6px;\n\t\tcolor:#fff;\n\t\tbackground-color:#042b21;\n\t\tanimation:save 0.5s cubic-bezier(.49,-0.04,.09,.95);\n\t\th3{\n\t\t\tmargin-bottom:30px;\n\t\t\tfont-size:2.5em;\n\t\t\tfont-weight:bold;\n\t\t}\n\t\tbutton{\n\t\t\twidth:40%;\n\t\t\tmin-width:100px;\n\t\t\tmargin-top:40px;\n\t\t\tpadding:10px;\n\t\t\tfont-size:1.13em;\n\t\t\tborder-radius:6px;\n\t\t\tborder:1px solid #12614c;\n\t\t\tcolor:#fff;\n\t\t\tbackground-color:#12614c;\n\t\t\ttransition:0.3s;\n\t\t\tcursor:pointer;\n\t\t\t&:hover{\n\t\t\t\tborder-color:#fff;\n\t\t\t}\n\t\t\t&:disabled{ //비활성화\n\t\t\t\tbackground-color: #777;\n\t\t\t\tcolor: #aaa;\n\t\t\t\tborder-color: #aaa;\n\t\t\t\tcursor: no-drop;\n\t\t\t}\n\t\t}\n\t}\n\t@media ${props => props.theme.M} {\n\t\t>div{\n\t\t\tpadding:30px 20px;\n\t\t\tbutton{\n\t\t\t\tmargin-top:30px;\n\t\t\t}\n\t\t}\t\n\t}\n\t@keyframes save {\n\t\t0%{\n\t\t\ttransform:scale(0);\n\t\t}\n\t\t100%{\n\t\t\ttransform:scale(1);\n\t\t}\n\t}\n\t@keyframes saveBG {\n\t\t0%{\n\t\t\topacity:0;\n\t\t}\n\t\t100%{\n\t\t\topacity:1;\n\t\t}\n\t}\n`;\nconst User = styled.div`\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tborder-radius:6px;\n\toverflow:hidden;\n\tbackground-color:#fff;\n\tposition:relative;\n\t&::before{\n\t\tcontent:\"\";\n\t\twidth:2px;\n\t\theight:50%;\n\t\tbackground-color:#042b21;\n\t\tposition:absolute;\n\t\ttop:25%;\n\t\tleft:calc(50% - 1px);\n\t}\n\tul{\n\t\twidth:50%;\n\t\tpadding:20px;\n\t\tcolor:#042b21;\n\t\t&:last-child{\n\t\t\tli{\n\t\t\t\t&:last-child{\n\t\t\t\t\tcolor:orange;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tli{\n\t\t\tfont-size:1.5em;\n\t\t\tfont-weight:bold;\n\t\t\t&:first-child{\n\t\t\t\tmargin-bottom:10px;\n\t\t\t\tfont-size:1.13em;\n\t\t\t}\n\t\t\tinput{\n\t\t\t\twidth:100%;\n\t\t\t\tfont-size:1em;\n\t\t\t\tfont-weight:bold;\n\t\t\t\ttext-align:center;\n\t\t\t\tcolor:#042b21;\n\t\t\t\t&::placeholder{\n\t\t\t\t\topacity:0.5;\n\t\t\t\t}\n\t\t\t\t&:hover{\n\t\t\t\t\t&::placeholder{\n\t\t\t\t\t\topacity:1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t&:focus{\n\t\t\t\t\t&::placeholder{\n\t\t\t\t\t\topacity:0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@media ${props => props.theme.M} {\n\t\tul{\n\t\t\tpadding:20px 15px;\n\t\t}\n\t}\n\t@media ${props => props.theme.S} {\n\t\tul{\n\t\t\tli{\n\t\t\t\t&:first-child{\n\t\t\t\t\tfont-size:1.4em;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Record: React.FC<RecordProps> = () => {\n\tconst dispatch = useDispatch();\n\tconst userRecord = useSelector((state: RootState) => state.props.userRecord);\n\tconst [userName, setUserName] = useState<string>(\"\");\n\tconst [disableBtn, setDisableBtn] = useState<boolean>(true);\n\n\tconst saveRecord = async(e: React.FormEvent) => { //게임 결과 DB저장\n\t\te.preventDefault(); //페이지 리로드 방지\n\n\t\tif(userName && userRecord) { //닉네임과 기록이 있는 경우\n\t\t\ttry {\n\t\t\t\tconst res = await axios.post(\"/api/ranks\", { //닉네임 기록 DB보내기\n\t\t\t\t\tuserName: userName,\n\t\t\t\t\tuserRecord: userRecord,\n\t\t\t\t});\n\n\t\t\t\tconsole.log(\"저장된 기록:\", res.data); //보낸 기록 정보\n\t\t\t\tconst updatedRankData = await axios.get(\"/api/ranks\"); //최신 DB\n\n\t\t\t\tdispatch(setRank(updatedRankData.data)); //기록 갱신\n\t\t\t\t\n\t\t\t\tdispatch(resetGame()); //게임 초기화\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err + \"기록 저장 실패\");\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetDisableBtn(!userName)\n\t}, [userName])\n\n\treturn (\n\t\t<Save>\n\t\t\t<div>\n\t\t\t\t<h3>게임 결과</h3>\n\t\t\t\t<User>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>이름</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"입력해주세요.\"\n\t\t\t\t\t\t\t\tmaxLength={4}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst inputValue = e.target.value;\n\t\t\t\t\t\t\t\t\tif(inputValue.length > 4) {\n\t\t\t\t\t\t\t\t\t\talert(\"최대 4글자 까지만 입력 가능합니다.\");\n\t\t\t\t\t\t\t\t\t\tsetUserName(inputValue.slice(0, 4));\n\t\t\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\t\t\tsetUserName(inputValue);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>내 기록</li>\n\t\t\t\t\t\t<li>{userRecord}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</User>\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={saveRecord}\n\t\t\t\t\tdisabled={disableBtn} //disableBtn이 true면 disabled\n\t\t\t\t>\n\t\t\t\t\t확인\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Save>\n\t)\n}\n\nexport default Record","// 같은 그림 찾기 영역\nimport React, { useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport Timer from './Timer';\nimport MemoryGame from './MemoryGame';\nimport ResetBtn from './ResetBtn';\nimport Record from './Record';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setUserRecord, setRank, setMenu } from '../redux/propsSlice';\nimport { RootState } from '../redux/store';\n\nconst Wrap = styled.div`\n\tmin-height:100vh;\n\tpadding:0 15px;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tgap:5%;\n\tbackground-color:#0a3c2f;\n\toverflow:hidden;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tpadding:10px 0;\n\t\ttext-align:center;\n\t}\n\t@media ${props => props.theme.L} {\n\t\tpadding-top:55px;\n\t}\n`;\nconst Menu = styled.button`\n\t@media ${props => props.theme.L} {\n\t\twidth:30px;\n\t\theight:26px;\n\t\tborder-top:3px solid #fff;\n\t\tborder-bottom:3px solid #fff;\n\t\tbackground-color:transparent;\n\t\tcursor:pointer;\n\t\tposition:absolute;\n\t\ttop:20px;\n\t\tright:20px;\n\t\tz-index:100;\n\t\t&::before,\n\t\t&::after{\n\t\t\tcontent:\"\";\n\t\t\twidth:100%;\n\t\t\theight:3px;\n\t\t\tbackground-color:#fff;\n\t\t\tposition:absolute;\n\t\t\ttop:50%;\n\t\t\tleft:0;\n\t\t\ttransform:translateY(-50%);\n\t\t\ttransition:0.3s;\n\t\t}\n\t\t&.on{\n\t\t\tborder-color:transparent;\n\t\t\t&::before{\n\t\t\t\ttransform:translateY(-50%) rotate(45deg);\n\t\t\t}\n\t\t\t&::after{\n\t\t\t\ttransform:translateY(-50%) rotate(-45deg);\n\t\t\t}\n\t\t}\n\t}\n`;\nconst Board = styled.div`\n\twidth:65%;\n\tmax-width:560px;\n\tpadding:40px 60px;\n\tdisplay:inline-block;\n\tvertical-align:top;\n\tborder-radius:6px;\n\tbackground-color:#0d614b;\n\tposition:relative;\n\toverflow:hidden;\n\th1{\n\t\tline-height:1.2;\n\t\tfont-size:3em;\n\t\tfont-weight:bold;\n\t\tcolor:#fff;\n\t\tletter-spacing:0.1em;\n\t}\n\t@media ${props => props.theme.L} {\n\t\twidth:100%;\n\t\tmax-width:470px;\n\t\tpadding:40px;\n\t}\n\t@media ${props => props.theme.S} {\n\t\tpadding:30px;\n\t}\n\t@media ${props => props.theme.XS} {\n\t\tpadding:20px;\n\t}\n`;\nconst Notice = styled.div`\t\n\tline-height:2.5rem;\n\tfont-size:1.3em;\n\tfont-weight:bold;\n\tcolor:orange;\n`;\nconst Rank = styled.div`\n\twidth:30%;\n\tmax-width:250px;\n\tdisplay:inline-block;\n\tvertical-align:top;\n\tmargin-left:5%;\n\tpadding:10px;\n\tborder-radius:6px;\n\tbackground-color:#12614c;\n\t>h2{\n\t\ttext-align:center;\n\t\tfont-size:2.2em;\n\t\tfont-weight:bold;\n\t\tcolor:#fff;\n\t}\n\t>ul{\n\t\tdisplay:flex;\n\t\tflex-direction:column;\n\t\tgap:6px;\n\t\tmargin-top:10px;\n\t\tpadding:10px;\n\t\ttext-align:center;\n\t\tli{\n\t\t\tdisplay:flex;\n\t\t\tjustify-content:center;\n\t\t\talign-items:center;\n\t\t\tgap:6px;\n\t\t\tpadding:8px 5px 5px;\n\t\t\tfont-size:1rem;\n\t\t\tborder-radius:6px;\n\t\t\tcolor:#fff;\n\t\t\tbackground-color:#0c3c2f;\n\t\t\t&::before{\n\t\t\t\twidth:30px;\n\t\t\t\tdisplay:inline-block;\n\t\t\t\tvertical-align:middle;\n\t\t\t\tfont-weight:bold;\n\t\t\t\ttext-align:right;\n\t\t\t}\n\t\t\t&:nth-child(1){\n\t\t\t\tcolor:orange;\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"1st\";\n\t\t\t\t\tcolor:orange;\n\t\t\t\t}\n\t\t\t\tspan{\n\t\t\t\t\t&:last-child{\n\t\t\t\t\t\t&::before{\n\t\t\t\t\t\t\tbackground-color:orange;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(2){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"2nd\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(3){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"3rd\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(4){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"4th\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(5){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"5th\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tspan{\n\t\t\t\t&:first-child{\n\t\t\t\t\twidth:80px;\n\t\t\t\t}\n\t\t\t\t&:last-child{\n\t\t\t\t\twidth:60px;\n\t\t\t\t\tposition:relative;\n\t\t\t\t\t&::before{\n\t\t\t\t\t\tcontent:\"\";\n\t\t\t\t\t\twidth:8px;\n\t\t\t\t\t\theight:3px;\n\t\t\t\t\t\tbackground-color:#fff;\n\t\t\t\t\t\tposition:absolute;\n\t\t\t\t\t\tleft:-7px;\n\t\t\t\t\t\ttop:5px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@media ${props => props.theme.L} {\n\t\twidth:250px;\n\t\theight:100vh;\n\t\tmargin:0;\n\t\tpadding-top:75px;\n\t\tborder-radius:0;\n\t\tbox-shadow:-1px 0px 20px rgba(0,0,0,0.4);\n\t\tposition:absolute;\n\t\ttop:0;\n\t\tright:-250px;\n\t\ttransition:0.3s;\n\t\t&::before{\n\t\t\tcontent:\"\";\n\t\t\twidth:calc(100% - 250px);\n\t\t\theight:100vh;\n\t\t\tbackdrop-filter:blur(2px);\n\t\t\tposition:fixed;\n\t\t\ttop:0;\n\t\t\tright:-100%;\n\t\t\tz-index:1;\n\t\t\ttransition:0.3s;\n\t\t}\n\t\t&.on{\n\t\t\tright:0;\n\t\t\t&::before{\n\t\t\t\tright:250px;\n\t\t\t}\n\t\t}\n  }\n`;\n\nconst Content: React.FC = () => {\n\tconst dispatch = useDispatch();\n\tconst run = useSelector((state: RootState) => state.props.run);\n  const finish = useSelector((state: RootState) => state.props.finish);\n  const menu = useSelector((state: RootState) => state.props.menu);\n  const userRecord = useSelector((state: RootState) => state.props.userRecord);\n  const resetCount = useSelector((state: RootState) => state.props.resetCount);\n  const rank = useSelector((state: RootState) => state.props.rank);\n\tconst recordValue = (record: string) => {\n    dispatch(setUserRecord(record));\n  };\n\n\n\tuseEffect(() => {\n\t\tconst fetchRankData = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(\"/api/ranks\");\n\t\t\t\tconst rankData = res.data;\n\n\t\t\t\tdispatch(setRank(rankData));\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"랭크 데이터 가져오기 실패:\", err);\n\t\t\t}\n\t\t}\n\n\t\tfetchRankData();\n\t}, [dispatch]);\n\n\tconst menuHandler = () => {\n\t\t// 메뉴버튼 토글 이벤트\n\t\tdispatch(setMenu(!menu));\n\t}\n\tconst wrapClickHandler = () => {\n\t\t// 메뉴 오픈시 배경 클릭시 메뉴닫기\n\t\tdispatch(setMenu(false));\n\t}\n\t\n\treturn (\n\t\t<Wrap onClick={wrapClickHandler}>\n\t\t\t<div>\n\t\t\t\t<Menu onClick={menuHandler} className={menu ? \"on\" : \"\"}></Menu>\n\n\t\t\t\t<Board>\n\t\t\t\t\t<h1>같은그림찾기</h1>\n\t\t\t\t\t{run || resetCount > 0\n\t\t\t\t\t\t? <Timer run={run} recordValue={recordValue} />\n\t\t\t\t\t\t: <Notice>&#8251; 카드 선택 시 게임시작 &#8251;</Notice>\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t<MemoryGame resetCount={resetCount} />\n\t\t\t\t\t<ResetBtn />\n\t\t\t\t</Board>\n\n\t\t\t\t<Rank className={menu ? \"on\" : \"\"}>\n\t\t\t\t\t<h2>순위표</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{rank.map(({ userName, userRecord }, idx) => (\n\t\t\t\t\t\t\t<li key={idx}>\n\t\t\t\t\t\t\t\t<span>{userName}</span>\n\t\t\t\t\t\t\t\t<span>{userRecord}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Rank>\n\n\t\t\t\t{finish && !run &&\n\t\t\t\t\t// 게임이 종료되면 기록 DB에 저장\n\t\t\t\t\t<Record userRecord={userRecord} />\n        }\n\t\t\t</div>\n\t\t</Wrap>\n\t)\n}\n\nexport default Content","import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Content from './component/Content';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Content />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App"],"names":["Time","styled","div","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","run","useSelector","state","props","_useState","useState","_useState2","_slicedToArray","seconds","setSeconds","_useState3","_useState4","record","setRecord","formatTime","time","toString","useEffect","timer","setInterval","prevSeconds","minutes","Math","floor","remainingSeconds","progress","setUserRecord","clearInterval","_jsx","children","Wrap","Card","_templateObject2","resetCount","randomEmojis","setRandomEmojis","open","setOpen","_useState5","_useState6","match","setMatch","_useState7","_useState8","start","setStart","shuffled","sort","random","length","_open","idx1","idx2","setTimeout","concat","_toConsumableArray","setRun","setFinish","map","emoji","idx","onClick","includes","select","className","Btn","button","resetGame","Save","theme","M","User","S","userRecord","userName","setUserName","disableBtn","setDisableBtn","saveRecord","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","updatedRankData","wrap","_context","prev","next","preventDefault","axios","post","sent","console","log","data","get","setRank","t0","error","stop","_x","apply","arguments","_jsxs","type","placeholder","maxLength","onChange","inputValue","target","value","alert","slice","disabled","L","Menu","Board","_templateObject3","XS","Notice","_templateObject4","Rank","_templateObject5","finish","menu","rank","fetchRankData","rankData","setMenu","Timer","recordValue","MemoryGame","ResetBtn","_ref2","Record","BrowserRouter","Routes","Route","path","element","Content"],"sourceRoot":""}