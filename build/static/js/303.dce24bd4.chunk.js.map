{"version":3,"file":"static/js/303.dce24bd4.chunk.js","mappings":"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","sources":["component/Timer.tsx","component/MemoryGame.tsx","component/ResetBtn.tsx","component/Record.tsx","component/Content.tsx","App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { TimerProps } from '../model/gameType';\n\nconst Time = styled.div`\n\tline-height:2.5rem;\n\tfont-size:2.5em;\n\tfont-weight:600;\n\tcolor:orange;\n`;\n\nconst Timer: React.FC<TimerProps> = ({ run, recordValue }) => {\n\tconst [seconds, setSeconds] = useState<number>(0);\n  const [record, setRecord] = useState<string>(\"00:00\");\n\n\tconst formatTime = (time: number) => { //타이머 두자릿수(10보다 작으면 0 붙여주기)\n\t\treturn time < 10 ? \"0\" + time : time.toString();\n\t}\n\n\tuseEffect(() => { //게임 시작시 타이머 작동(run=true인 경우)\n\t\tlet timer: NodeJS.Timeout;\n\t\tif(run) { //타이머 시작\n\t\t\ttimer = setInterval(() => {\n\t\t\t\tsetSeconds((prevSeconds) => prevSeconds + 1);\n\t\t\t}, 1000);\n\n\t\t\tconst minutes = Math.floor(seconds / 60); //60초가 되면 1분으로 표시\n\t\t\tconst remainingSeconds = seconds % 60; //60초 이후 다시 0부터 초단위 시작(seconds % 60 = 누적시간에서 60을 나누고 남은 값)\n\t\t\tconst progress = formatTime(minutes) + \":\" + formatTime(remainingSeconds);\n\t\t\tsetRecord(progress);\n\t\t\trecordValue(progress);\n\t\t} else if(!run) { //종료시 초기화\n\t\t\tsetSeconds(0);\n\t\t\tsetRecord(\"00:00\");\n\t\t}\n\n    return () => clearInterval(timer); // 컴포넌트가 언마운트될 때 타이머 정리\n  }, [seconds, run, recordValue]);\n\t\n\treturn (\n\t\t<Time>\n\t\t\t{record}\n\t\t\t{/* run(게임시작) 이 true일때 타이머 작동 */}\n\t\t</Time>\n\t)\n}\n\nexport default Timer","import React, {useState, useEffect} from 'react';\nimport { styled } from 'styled-components';\nimport { MemoryGameProps } from '../model/gameType';\n\nconst Wrap = styled.div`\n\twidth:100%;\n\tmax-width:440px;\n\tmargin:10px auto 20px;\n\tpadding-top:100%;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tflex-wrap:wrap;\n\t\tgap:3.33%;\n\t\ttransform-style:preserve-3d;\n\t\tperspective:500px;\n\t\tposition:absolute;\n\t\tinset:0;\n\t}\n\n`;\nconst Card = styled.div`\n\twidth:22.5%;\n\tpadding-top:22.5%;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tjustify-content:center;\n\t\talign-items:center;\n\t\tfont-size:3em;\n\t\tbackground-color:#fff;\n\t\ttransition:0.25s;\n\t\ttransform:rotateY(180deg);\n\t\tcursor:pointer;\n\t\tposition:absolute;\n\t\tinset:0;\n\t\t&::after{\n\t\t\tcontent:\"\";\n\t\t\tposition:absolute;\n\t\t\tinset:0;\n\t\t\tbackground-color:#209d70;\n\t\t\ttransform:rotateY(0deg);\n\t\t\tbackface-visibility:hidden;\n\t\t}\n\t\t&.open{\n\t\t\ttransform:rotateY(0deg);\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t\t&.match{\n\t\t\tpointer-events:none;\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t}\n\t&:hover{\n\t\t>div{\n\t\t\t&::after{\n\t\t\t\tbackground-color:#59b18d;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst MemoryGame: React.FC<MemoryGameProps> = ({ setRun, setFinish, resetCount }) => {\n\tconst [randomEmojis, setRandomEmojis] = useState<string[]>([]);\n\tconst [open, setOpen] = useState<number[]>([]);\n\tconst [match, setMatch] = useState<number[]>([]);\n\tconst [start, setStart] = useState<boolean>(false);\n\t\n\tuseEffect(() => { //랜덤순으로 이모지 카드 만들기(리셋버튼 클릭시 재실행)\n\t\tconst emojis = [\"😁\", \"😁\", \"🤪\", \"🤪\", \"🥳\", \"🥳\", \"😭\", \"😭\", \"🤢\", \"🤢\", \"🥵\", \"🥵\", \"😱\", \"😱\", \"🥶\", \"🥶\"];\n    const shuffled = emojis.sort(() => (Math.random() > 0.5 ? 1 : -1));\n\t\tsetStart(false);\n\t\tsetOpen([]);\n\t\tsetMatch([]);\n    setRandomEmojis(shuffled);\n  }, [resetCount]);\n\n\tuseEffect(() => {\n\t\tif(open.length === 2) { //두장의 카드를 오픈한 경우\n\t\t\tconst [idx1, idx2] = open;\n\t\t\tconst emoji1 = randomEmojis[idx1];\n\t\t\tconst emoji2 = randomEmojis[idx2];\n\n\t\t\tif(emoji1 === emoji2) { //두 카드의 이모지가 동일한 경우\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetMatch([...match, idx1, idx2]);\n\t\t\t\t\tsetOpen([]);\n\t\t\t\t}, 500)\n\t\t\t} else{ //두 카드의 이모지가 다른 경우\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetOpen([]);\n\t\t\t\t}, 500)\n\t\t\t}\n\t\t}\n\n\t\tif(randomEmojis.length > 0 && match.length > 0 && randomEmojis.length === match.length) {\n\t\t\t//모든 카드의 이모지가 동일한 경우\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(start) {\n\t\t\t\t\tsetRun(false); //시작 props\n\t\t\t\t\tsetFinish(true); //종료 props\n\t\t\t\t\tsetStart(false);\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t}\n\t}, [open, randomEmojis, match, start, setRun, setFinish])\n\n\tconst select = (idx: number) => { //카드 오픈 이벤트\n\t\tif(open.length >= 2) return; //2개의 카드가 열려있으면 이벤트 무시\n\t\tif(open.includes(idx)) return; //이미 선택된 카드면 이벤트 무시\n\t\tif(!start) {\n\t\t\tsetRun(true);\n\t\t\tsetStart(true);\n\t\t}\n\n\t\tsetOpen([...open, idx]) //선택된 카드 배열에 추가\n\t}\n\n\treturn (\n\t\t<Wrap>\n\t\t\t<div>\n\t\t\t\t{randomEmojis.map((emoji, idx) => (\n\t\t\t\t\t<Card key={idx}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => select(idx)}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\topen.includes(idx)\n\t\t\t\t\t\t\t\t? \"open\"\n\t\t\t\t\t\t\t\t: match.includes(idx)\n\t\t\t\t\t\t\t\t? \"match\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emoji}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t))}\n\t\t\t</div>\n    </Wrap>\n\t)\n}\n\nexport default MemoryGame","import React from 'react';\nimport { styled } from 'styled-components';\n\nconst Btn = styled.button`\n\tpadding:15px 20px;\n\tfont-size:1.5em;\n\ttext-transform:uppercase;\n\tletter-spacing:0.1em;\n\tborder:0;\n\tcolor:#267c65;\n\tbackground-color:#fff;\n\tcursor:pointer;\n\t&:hover{\n\t\tcolor:#fff;\n\t\tbackground-color:#267c65;\n\t}\n`;\n\nconst ResetBtn: React.FC<{ resetGame: () => void }> = ({ resetGame }) => {\n\treturn (\n\t\t<Btn onClick={resetGame}>Reset Game</Btn>\n\t)\n}\n\nexport default ResetBtn","import React, { useEffect, useState } from 'react'\nimport { styled } from 'styled-components';\nimport { RecordProps } from '../model/gameType';\nimport axios from 'axios';\n\nconst Save = styled.div`\n\twidth:100%;\n\theight:100%;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tbackground-color:rgba(255,255,255,0.3);\n\tposition:fixed;\n\tinset:0;\n\tbackdrop-filter:blur(3px);\n\tanimation:saveBG 0.5s cubic-bezier(.49,-0.04,.09,.95);\n\t>div{\n\t\twidth:calc(100% - 60px);\n\t\tmax-width:550px;\n\t\tpadding:40px;\n\t\tborder-radius:6px;\n\t\tcolor:#fff;\n\t\tbackground-color:#042b21;\n\t\tanimation:save 0.5s cubic-bezier(.49,-0.04,.09,.95);\n\t\th3{\n\t\t\tmargin-bottom:30px;\n\t\t\tfont-size:2.5em;\n\t\t\tfont-weight:bold;\n\t\t}\n\t\tbutton{\n\t\t\twidth:40%;\n\t\t\tmin-width:100px;\n\t\t\tmargin-top:40px;\n\t\t\tpadding:10px;\n\t\t\tfont-size:1.13em;\n\t\t\tborder-radius:6px;\n\t\t\tborder:1px solid #12614c;\n\t\t\tcolor:#fff;\n\t\t\tbackground-color:#12614c;\n\t\t\ttransition:0.3s;\n\t\t\tcursor:pointer;\n\t\t\t&:hover{\n\t\t\t\tborder-color:#fff;\n\t\t\t}\n\t\t\t&:disabled{ //비활성화\n\t\t\t\tbackground-color: #777;\n\t\t\t\tcolor: #aaa;\n\t\t\t\tborder-color: #aaa;\n\t\t\t\tcursor: no-drop;\n\t\t\t}\n\t\t}\n\t}\n\t@media ${props => props.theme.M} {\n\t\t>div{\n\t\t\tpadding:30px 20px;\n\t\t\tbutton{\n\t\t\t\tmargin-top:30px;\n\t\t\t}\n\t\t}\t\n\t}\n\t@keyframes save {\n\t\t0%{\n\t\t\ttransform:scale(0);\n\t\t}\n\t\t100%{\n\t\t\ttransform:scale(1);\n\t\t}\n\t}\n\t@keyframes saveBG {\n\t\t0%{\n\t\t\topacity:0;\n\t\t}\n\t\t100%{\n\t\t\topacity:1;\n\t\t}\n\t}\n`;\nconst User = styled.div`\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tborder-radius:6px;\n\toverflow:hidden;\n\tbackground-color:#fff;\n\tposition:relative;\n\t&::before{\n\t\tcontent:\"\";\n\t\twidth:2px;\n\t\theight:50%;\n\t\tbackground-color:#042b21;\n\t\tposition:absolute;\n\t\ttop:25%;\n\t\tleft:calc(50% - 1px);\n\t}\n\tul{\n\t\twidth:50%;\n\t\tpadding:20px;\n\t\tcolor:#042b21;\n\t\t&:last-child{\n\t\t\tli{\n\t\t\t\t&:last-child{\n\t\t\t\t\tcolor:orange;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tli{\n\t\t\tfont-size:1.5em;\n\t\t\tfont-weight:bold;\n\t\t\t&:first-child{\n\t\t\t\tmargin-bottom:10px;\n\t\t\t\tfont-size:1.13em;\n\t\t\t}\n\t\t\tinput{\n\t\t\t\twidth:100%;\n\t\t\t\tfont-size:1em;\n\t\t\t\tfont-weight:bold;\n\t\t\t\ttext-align:center;\n\t\t\t\tcolor:#042b21;\n\t\t\t\t&::placeholder{\n\t\t\t\t\topacity:0.5;\n\t\t\t\t}\n\t\t\t\t&:hover{\n\t\t\t\t\t&::placeholder{\n\t\t\t\t\t\topacity:1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t&:focus{\n\t\t\t\t\t&::placeholder{\n\t\t\t\t\t\topacity:0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@media ${props => props.theme.M} {\n\t\tul{\n\t\t\tpadding:20px 15px;\n\t\t}\n\t}\n\t@media ${props => props.theme.S} {\n\t\tul{\n\t\t\tli{\n\t\t\t\t&:first-child{\n\t\t\t\t\tfont-size:1.4em;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Record: React.FC<RecordProps> = ({ userRecord, setRank, resetGame }) => {\n\tconst [userName, setUserName] = useState<string>(\"\");\n\tconst [disableBtn, setDisableBtn] = useState<boolean>(true);\n\n\tconst saveRecord = async(e: React.FormEvent) => { //게임 결과 DB저장\n\t\te.preventDefault(); //페이지 리로드 방지\n\n\t\tif(userName && userRecord) { //닉네임과 기록이 있는 경우\n\t\t\ttry {\n\t\t\t\tconst res = await axios.post(\"/ranks\", { //닉네임 기록 DB보내기\n\t\t\t\t\tuserName: userName,\n\t\t\t\t\tuserRecord: userRecord,\n\t\t\t\t});\n\n\t\t\t\tconsole.log(\"저장된 기록:\", res.data); //보낸 기록 정보\n\n\t\t\t\tconst updatedRankData = await axios.get(\"/ranks\"); //최신 DB\n\t\t\t\tsetRank(updatedRankData.data); //기록 갱신\n\t\t\t\t\n\t\t\t\tresetGame(); //게임 초기화\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err + \"기록 저장 실패\");\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetDisableBtn(!userName)\n\t}, [userName])\n\n\treturn (\n\t\t<Save>\n\t\t\t<div>\n\t\t\t\t<h3>게임 결과</h3>\n\t\t\t\t<User>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>이름</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"입력해주세요.\"\n\t\t\t\t\t\t\t\tmaxLength={4}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tconst inputValue = e.target.value;\n\t\t\t\t\t\t\t\t\tif(inputValue.length > 4) {\n\t\t\t\t\t\t\t\t\t\talert(\"최대 4글자 까지만 입력 가능합니다.\");\n\t\t\t\t\t\t\t\t\t\tsetUserName(inputValue.slice(0, 4));\n\t\t\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\t\t\tsetUserName(inputValue);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>내 기록</li>\n\t\t\t\t\t\t<li>{userRecord}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</User>\n\n\t\t\t\t<button\n\t\t\t\t\tonClick={saveRecord}\n\t\t\t\t\tdisabled={disableBtn} //disableBtn이 true면 disabled\n\t\t\t\t>\n\t\t\t\t\t확인\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Save>\n\t)\n}\n\nexport default Record","import React, { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport Timer from './Timer';\nimport MemoryGame from './MemoryGame';\nimport ResetBtn from './ResetBtn';\nimport Record from './Record';\nimport axios from 'axios';\n\nconst Wrap = styled.div`\n\tmin-height:100vh;\n\tpadding:0 15px;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tgap:5%;\n\tbackground-color:#0a3c2f;\n\toverflow:hidden;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tpadding:10px 0;\n\t\ttext-align:center;\n\t}\n\t@media ${props => props.theme.L} {\n\t\tpadding-top:55px;\n\t}\n`;\nconst Menu = styled.button`\n\t@media ${props => props.theme.L} {\n\t\twidth:30px;\n\t\theight:26px;\n\t\tborder-top:3px solid #fff;\n\t\tborder-bottom:3px solid #fff;\n\t\tbackground-color:transparent;\n\t\tcursor:pointer;\n\t\tposition:absolute;\n\t\ttop:20px;\n\t\tright:20px;\n\t\tz-index:100;\n\t\t&::before,\n\t\t&::after{\n\t\t\tcontent:\"\";\n\t\t\twidth:100%;\n\t\t\theight:3px;\n\t\t\tbackground-color:#fff;\n\t\t\tposition:absolute;\n\t\t\ttop:50%;\n\t\t\tleft:0;\n\t\t\ttransform:translateY(-50%);\n\t\t\ttransition:0.3s;\n\t\t}\n\t\t&.on{\n\t\t\tborder-color:transparent;\n\t\t\t&::before{\n\t\t\t\ttransform:translateY(-50%) rotate(45deg);\n\t\t\t}\n\t\t\t&::after{\n\t\t\t\ttransform:translateY(-50%) rotate(-45deg);\n\t\t\t}\n\t\t}\n\t}\n`;\nconst Board = styled.div`\n\twidth:65%;\n\tmax-width:560px;\n\tpadding:40px 60px;\n\tdisplay:inline-block;\n\tvertical-align:top;\n\tborder-radius:6px;\n\tbackground-color:#0d614b;\n\tposition:relative;\n\toverflow:hidden;\n\th1{\n\t\tline-height:1.2;\n\t\tfont-size:3em;\n\t\tfont-weight:bold;\n\t\tcolor:#fff;\n\t\tletter-spacing:0.1em;\n\t}\n\t@media ${props => props.theme.L} {\n\t\twidth:100%;\n\t\tmax-width:470px;\n\t\tpadding:40px;\n\t}\n\t@media ${props => props.theme.S} {\n\t\tpadding:30px;\n\t}\n\t@media ${props => props.theme.XS} {\n\t\tpadding:20px;\n\t}\n`;\nconst Notice = styled.div`\t\n\tline-height:2.5rem;\n\tfont-size:1.3em;\n\tfont-weight:bold;\n\tcolor:orange;\n`;\nconst Rank = styled.div`\n\twidth:30%;\n\tmax-width:250px;\n\tdisplay:inline-block;\n\tvertical-align:top;\n\tmargin-left:5%;\n\tpadding:10px;\n\tborder-radius:6px;\n\tbackground-color:#12614c;\n\t>h2{\n\t\ttext-align:center;\n\t\tfont-size:2.2em;\n\t\tfont-weight:bold;\n\t\tcolor:#fff;\n\t}\n\t>ul{\n\t\tdisplay:flex;\n\t\tflex-direction:column;\n\t\tgap:6px;\n\t\tmargin-top:10px;\n\t\tpadding:10px;\n\t\ttext-align:center;\n\t\tli{\n\t\t\tdisplay:flex;\n\t\t\tjustify-content:center;\n\t\t\talign-items:center;\n\t\t\tgap:6px;\n\t\t\tpadding:8px 5px 5px;\n\t\t\tfont-size:1rem;\n\t\t\tborder-radius:6px;\n\t\t\tcolor:#fff;\n\t\t\tbackground-color:#0c3c2f;\n\t\t\t&::before{\n\t\t\t\twidth:30px;\n\t\t\t\tdisplay:inline-block;\n\t\t\t\tvertical-align:middle;\n\t\t\t\tfont-weight:bold;\n\t\t\t\ttext-align:right;\n\t\t\t}\n\t\t\t&:nth-child(1){\n\t\t\t\tcolor:orange;\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"1st\";\n\t\t\t\t\tcolor:orange;\n\t\t\t\t}\n\t\t\t\tspan{\n\t\t\t\t\t&:last-child{\n\t\t\t\t\t\t&::before{\n\t\t\t\t\t\t\tbackground-color:orange;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(2){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"2nd\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(3){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"3rd\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(4){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"4th\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:nth-child(5){\n\t\t\t\t&::before{\n\t\t\t\t\tcontent:\"5th\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tspan{\n\t\t\t\t&:first-child{\n\t\t\t\t\twidth:80px;\n\t\t\t\t}\n\t\t\t\t&:last-child{\n\t\t\t\t\twidth:60px;\n\t\t\t\t\tposition:relative;\n\t\t\t\t\t&::before{\n\t\t\t\t\t\tcontent:\"\";\n\t\t\t\t\t\twidth:8px;\n\t\t\t\t\t\theight:3px;\n\t\t\t\t\t\tbackground-color:#fff;\n\t\t\t\t\t\tposition:absolute;\n\t\t\t\t\t\tleft:-7px;\n\t\t\t\t\t\ttop:5px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@media ${props => props.theme.L} {\n\t\twidth:250px;\n\t\theight:100vh;\n\t\tmargin:0;\n\t\tpadding-top:75px;\n\t\tborder-radius:0;\n\t\tbox-shadow:-1px 0px 20px rgba(0,0,0,0.4);\n\t\tposition:absolute;\n\t\ttop:0;\n\t\tright:-250px;\n\t\ttransition:0.3s;\n\t\t&::before{\n\t\t\tcontent:\"\";\n\t\t\twidth:calc(100% - 250px);\n\t\t\theight:100vh;\n\t\t\tbackdrop-filter:blur(2px);\n\t\t\tposition:fixed;\n\t\t\ttop:0;\n\t\t\tright:-100%;\n\t\t\tz-index:1;\n\t\t\ttransition:0.3s;\n\t\t}\n\t\t&.on{\n\t\t\tright:0;\n\t\t\t&::before{\n\t\t\t\tright:250px;\n\t\t\t}\n\t\t}\n  }\n`;\n\nconst Content: React.FC = () => {\n\tconst [run, setRun] = useState<boolean>(false);\n\tconst [finish, setFinish] = useState<boolean>(false);\n\tconst [menu, setMenu] = useState<boolean>(false);\n\tconst [userRecord, setUserRecord] = useState<string>(\"00:00\");\n\tconst [resetCount, setResetCount] = useState<number>(0);\n\tconst [rank, setRank] = useState<Array<{ userName: string; userRecord: string; }>>([]);\n\tconst recordValue = (record: string) => setUserRecord(record);\n\n\tuseEffect(() => {\n\t\tconst fetchRankData = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(\"/ranks\");\n\t\t\t\tconst rankData = res.data;\n\n\t\t\t\tsetRank(rankData);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"랭크 데이터 가져오기 실패:\", err);\n\t\t\t}\n\t\t}\n\n\t\tfetchRankData();\n\t}, []);\n\n\tconst menuHandler = () => {\n\t\t// 메뉴버튼 토글 이벤트\n\t\tsetMenu((prevMenu) => !prevMenu);\n\t}\n\tconst wrapClickHandler = () => {\n\t\t// 메뉴 오픈시 배경 클릭시 메뉴닫기\n\t\tif(menu) setMenu(false);\n\t}\n\n\tconst resetGame = () => {\n\t\tsetRun(false);\n\t\tsetFinish(false);\n\t\tsetUserRecord(\"00:00\");\n\t\tsetResetCount(prevCount => prevCount + 1); //리셋감지\n\t};\n\t\n\treturn (\n\t\t<Wrap onClick={wrapClickHandler}>\n\t\t\t<div>\n\t\t\t\t<Menu onClick={menuHandler} className={menu ? \"on\" : \"\"}></Menu>\n\n\t\t\t\t<Board>\n\t\t\t\t\t<h1>같은그림찾기</h1>\n\t\t\t\t\t{run || resetCount > 0\n\t\t\t\t\t\t? <Timer run={run} setFinish={setFinish} recordValue={recordValue} />\n\t\t\t\t\t\t: <Notice>&#8251; 카드 선택 시 게임시작 &#8251;</Notice>\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t<MemoryGame setRun={setRun} setFinish={setFinish} resetCount={resetCount} />\n\t\t\t\t\t<ResetBtn resetGame={resetGame} />\n\t\t\t\t</Board>\n\n\t\t\t\t<Rank className={menu ? \"on\" : \"\"}>\n\t\t\t\t\t<h2>순위표</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{rank.map(({ userName, userRecord }, idx) => (\n\t\t\t\t\t\t\t<li key={idx}>\n\t\t\t\t\t\t\t\t<span>{userName}</span>\n\t\t\t\t\t\t\t\t<span>{userRecord}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Rank>\n\n\t\t\t\t{finish && !run &&\n\t\t\t\t\t// 게임이 종료되면 기록 DB에 저장\n\t\t\t\t\t<Record userRecord={userRecord} setRank={setRank} resetGame={resetGame} />\n        }\n\t\t\t</div>\n\t\t</Wrap>\n\t)\n}\n\nexport default Content","import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Content from './component/Content';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Content />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App"],"names":["Time","styled","div","_templateObject","_taggedTemplateLiteral","_ref","run","recordValue","_useState","useState","_useState2","_slicedToArray","seconds","setSeconds","_useState3","_useState4","record","setRecord","formatTime","time","toString","useEffect","timer","setInterval","prevSeconds","minutes","Math","floor","remainingSeconds","progress","clearInterval","_jsx","children","Wrap","Card","_templateObject2","setRun","setFinish","resetCount","randomEmojis","setRandomEmojis","open","setOpen","_useState5","_useState6","match","setMatch","_useState7","_useState8","start","setStart","shuffled","sort","random","length","_open","idx1","idx2","setTimeout","concat","_toConsumableArray","map","emoji","idx","onClick","includes","select","className","Btn","button","resetGame","Save","props","theme","M","User","S","userRecord","setRank","userName","setUserName","disableBtn","setDisableBtn","saveRecord","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","updatedRankData","wrap","_context","prev","next","preventDefault","axios","post","sent","console","log","data","get","t0","error","stop","_x","apply","arguments","_jsxs","type","placeholder","maxLength","onChange","inputValue","target","value","alert","slice","disabled","L","Menu","Board","_templateObject3","XS","Notice","_templateObject4","Rank","_templateObject5","finish","menu","setMenu","setUserRecord","_useState9","_useState10","setResetCount","_useState11","_useState12","rank","fetchRankData","rankData","prevCount","prevMenu","Timer","MemoryGame","ResetBtn","Record","BrowserRouter","Routes","Route","path","element","Content"],"sourceRoot":""}